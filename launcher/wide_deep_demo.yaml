apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: launch-kubeflow-paddle-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.6, pipelines.kubeflow.org/pipeline_compilation_time: '2021-10-28T20:01:07.937590',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "An example to launch paddle.",
      "name": "launch-kubeflow-paddle"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.6}
spec:
  entrypoint: launch-kubeflow-paddle
  templates:
  - name: component
    container:
      args: [--name, wide-and-deep, --namespace, kubeflow, --version, v1, --worker,
        '{"replicas": 1, "template": {"spec": {"containers": [{"image": "registry.baidubce.com/paddle-operator/demo-wide-and-deep:v1",
          "name": "paddle"}]}}}', --ps, '{"replicas": 1, "template": {"spec": {"containers":
          [{"image": "registry.baidubce.com/paddle-operator/demo-wide-and-deep:v1",
          "name": "paddle"}]}}}']
      command: [python, /paddle-launcher/launch_paddlejob.py]
      image: xiaolao/paddlejob-launcher:latest
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.6
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "Kubeflow
          PyTorchJob launcher", "implementation": {"container": {"args": ["--name",
          {"inputValue": "name"}, "--namespace", {"inputValue": "namespace"}, "--version",
          {"inputValue": "version"}, "--worker", {"inputValue": "worker_spec"}, {"if":
          {"cond": {"isPresent": "timeout_minutes"}, "then": ["--timeoutMinutes",
          {"inputValue": "timeout_minutes"}]}}, {"if": {"cond": {"isPresent": "delete_after_done"},
          "then": ["--deleteAfterDone", {"inputValue": "delete_after_done"}]}}, {"if":
          {"cond": {"isPresent": "clean_pod_policy"}, "then": ["--cleanPodPolicy",
          {"inputValue": "clean_pod_policy"}]}}, {"if": {"cond": {"isPresent": "scheduling_policy"},
          "then": ["--schedulingPolicy", {"inputValue": "scheduling_policy"}]}}, {"if":
          {"cond": {"isPresent": "intranet"}, "then": ["--intranet", {"inputValue":
          "intranet"}]}}, {"if": {"cond": {"isPresent": "with_gloo"}, "then": ["--withGloo",
          {"inputValue": "with_gloo"}]}}, {"if": {"cond": {"isPresent": "sampleset_ref"},
          "then": ["--sampleSetRef", {"inputValue": "sampleset_ref"}]}}, {"if": {"cond":
          {"isPresent": "ps_spec"}, "then": ["--ps", {"inputValue": "ps_spec"}]}},
          {"if": {"cond": {"isPresent": "heter_spec"}, "then": ["--heter", {"inputValue":
          "heter_spec"}]}}, {"if": {"cond": {"isPresent": "elastic"}, "then": ["--elastic",
          {"inputValue": "elastic"}]}}], "command": ["python", "/paddle-launcher/launch_paddlejob.py"],
          "image": "xiaolao/paddlejob-launcher:latest"}}, "inputs": [{"description":
          "PaddleJob name.", "name": "name", "type": "String"}, {"default": "kubeflow",
          "description": "PaddleJob namespace (likely your current namespace).", "name":
          "namespace", "type": "String"}, {"default": "v1", "description": "PaddleJob
          version.", "name": "version", "type": "String"}, {"description": "Time in
          minutes to wait for the PaddleJob to reach end.", "name": "timeout_minutes",
          "optional": true, "type": "Integer"}, {"description": "Whether to delete
          the job after it is finished.", "name": "delete_after_done", "optional":
          true, "type": "Boolean"}, {"description": "Defines whether to clean pod
          after job finished.", "name": "clean_pod_policy", "optional": true, "type":
          "String"}, {"description": "Defines the policy related to scheduling, for
          volcano.", "name": "scheduling_policy", "optional": true, "type": "JsonObject"},
          {"description": "Defines the communication mode inter pods : PodIP, Service
          or Host.", "name": "intranet", "optional": true, "type": "String"}, {"description":
          "Indicate whether enable gloo, 0/1/2 for disable/enable for worker/enable
          for server.", "name": "with_gloo", "optional": true, "type": "Integer"},
          {"description": "Defines the sample data set used for training and its mount
          path in worker pods.", "name": "sampleset_ref", "optional": true, "type":
          "JsonObject"}, {"description": "Describes the spec of server base on pod
          template.", "name": "ps_spec", "optional": true, "type": "JsonObject"},
          {"description": "Describes the spec of worker base on pod template.", "name":
          "worker_spec", "type": "JsonObject"}, {"description": "Describes the spec
          of heter worker base on pod temlate.", "name": "heter_spec", "optional":
          true, "type": "JsonObject"}, {"description": "Indicate the elastic level.",
          "name": "elastic", "optional": true, "type": "Integer"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "6c37eddc7a72bcd00440c2243ede27af253b3a21da4a6fc890195f234d2c3bb8", "url":
          "./paddlejob-component.yaml"}', pipelines.kubeflow.org/arguments.parameters: '{"name":
          "wide-and-deep", "namespace": "kubeflow", "ps_spec": "{\"replicas\": 1,
          \"template\": {\"spec\": {\"containers\": [{\"image\": \"registry.baidubce.com/paddle-operator/demo-wide-and-deep:v1\",
          \"name\": \"paddle\"}]}}}", "version": "v1", "worker_spec": "{\"replicas\":
          1, \"template\": {\"spec\": {\"containers\": [{\"image\": \"registry.baidubce.com/paddle-operator/demo-wide-and-deep:v1\",
          \"name\": \"paddle\"}]}}}"}'}
  - name: launch-kubeflow-paddle
    dag:
      tasks:
      - {name: component, template: component}
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
