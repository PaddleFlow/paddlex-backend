description: Kubeflow PyTorchJob launcher
inputs:
- {name: name,                       type: String,                          description: 'SampleSet name.'}
- {name: namespace,                  type: String,      default: kubeflow,  description: 'SampleSet namespace.'}
- {name: version,                    type: String,      default: v1alpha1,  description: 'SampleSet version.'}
- {name: timeout_minutes,            type: Integer,     optional: true,     description: 'Time in minutes to wait for the SampleSet to be ready.'}
- {name: partitions,                 type: Integer,     default: 1,         description: 'Partitions is the number of SampleSet partitions, partition means cache node.'}
- {name: source,                     type: JsonObject,  optional: true,     description: 'Source describes the information of data source uri and secret name.'}
- {name: secret_ref,                 type: JsonObject,  optional: true,     description: 'SecretRef is reference to the authentication secret for source storage and cache engine.'}
- {name: no_sync,                    type: String,      default: 'true',    description: 'If the data is already in cache engine backend storage, can set NoSync as true to skip Syncing phase.'}
- {name: csi,                        type: JsonObject,  optional: true,     description: 'CSI describes csi driver name and mount options to support cache data.'}
- {name: cache,                      type: JsonObject,  optional: true,     description: 'Cache options used by cache runtime engine.'}
- {name: node_affinity,              type: JsonObject,  optional: true,     description: 'NodeAffinity defines constraints that limit what nodes this SampleSet can be cached to.'}
implementation:
  container:
    image: xiaolao/paddlejob-launcher:latest
    command: [python, /paddle-launcher/launch_sampleset.py]
    args: 
      - --name
      - {inputValue: name}
      - --namespace
      - {inputValue: namespace}
      - --version
      - {inputValue: version}
      - --partitions
      - {inputValue: partitions}
      - --noSync
      - { inputValue: no_sync}
      - if:
          cond: {isPresent: timeout_minutes}
          then:
          - --timeoutMinutes
          - {inputValue: timeout_minutes}
      - if:
          cond: {isPresent: source}
          then:
          - --source
          - {inputValue: source}
      - if:
          cond: {isPresent: secret_ref}
          then:
          - --secretRef
          - {inputValue: secret_ref}
      - if:
          cond: {isPresent: csi}
          then:
          - --csi
          - {inputValue: csi}
      - if:
          cond: {isPresent: cache}
          then:
          - --cache
          - {inputValue: cache}
      - if:
          cond: {isPresent: node_affinity}
          then:
          - --nodeAffinity
          - {inputValue: node_affinity}