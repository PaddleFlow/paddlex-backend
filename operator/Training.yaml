name: SampleSet
description: SampleSet Launcher
inputs:
  - {name: Name,                       type: String,                          description: 'The name of DataSet.'}
  - {name: Namespace,                  type: String,      default: kubeflow,  description: 'The namespace which DataSet components run in'}
  - {name: Action,                     type: String,      default: apply,     description: 'Action to execute on Dataset.'}
  - {name: Image,                      type: String,                          description: 'The image of paddle training job which contains model training scripts.'}
  - {name: Command,                    type: string,                          description: 'The command to start model training task.'}
  - {name: Dataset,                    type: string,                          description: 'The name of sample data set.'}
  - {name: PVC Name,                   type: string,                          description: 'The persistent volume claim name of task-center.'}
  - {name: Worker Replicas,            type: Integer,                         description: 'The replicas of worker pods.'}
  - {name: PS Replicas,                type: Integer,     optional: true,     description: 'The replicas of parameter server pods.'}
  - {name: GPU Per Node,               type: Integer,     optional: true,     description: 'Specified the number of gpu that training job requested.'}
  - {name: Use VisualDL,               type: Boolean,     optional: true,     description: 'Specified whether use VisualDL, this will be work only when worker replicas is 1.'}

implementation:
  container:
    image: xiaolao/paddlex-backend:latest
    command: [python, dataset.py]
    args:
      - --name
      - {inputValue: Name}
      - --namespace
      - {inputValue: Namespace}
      - --action
      - {inputValue: Action}
      - --image
      - {inputValue: Image}
      - --command
      - {inputValue: command}
      - --dataset
      - {inputValue: Dataset}
      - --pvc_name
      - {inputValue: PVC Name}
      - --worker_replicas
      - {inputValue: Worker Replicas}
      - if:
          cond: {isPresent: PS Replicas}
          then:
            - --ps_replicas
            - {inputValue: PS Replicas}
      - if:
          cond: {isPresent: GPU Per Node}
          then:
            - --gpu_per_node
            - {inputValue: GPU Per Node}
      - if:
          cond: {isPresent: Use VisualDL}
          then:
            - --use_visualdl
            - {inputValue: Use VisualDL}
